.\" Manpage for Standard (?) Unix Notes
.\" aka notes
.\" See https://github.com/Standard-Unix-Notes/unix-notes
.TH man 1 "10 June 2021" "1.0" "notes man page"
.SH NAME
notes \- maintain GPG encrypted notes
.SH SYNOPSIS
.B
notes
[
.I
command
] [
.I
filename
| 
.I note_title
] 
 
.SH CONFIGURATION 
Manual configuration for the GPG key can be added using the phrase

.B    
    KEY <email address> 

in the file <notesdir>/config
.SH DESCRIPTION
The Standard(?) Unix Notes notebook system is a GPG encrypted 'notebook' where each note is individually encrypted into a notebook folder. It can handle multiple notebook folders and can decrypt/re-encrypt for a new GPG key easily. The program is based upon Password-Store the standard Unix password manager of which it borrows some code.

If no command is given then Notes simply runs 'notes help' which outputs a list of commands to STDOUT.

Before using the system the user should create a GPG key if they haven't got one. Notes will automatically search the user's GPG keyring and default to using the first private key it finds (Note that the code currently isn't clever enough to distinguish if that key is expired). If this is the wrong key you can change it in two ways:
1. Simply edit the ~/.notes/config file and replace the KEY parameter with the correct email address. This will only work if you only have one key with that email address. If you have two keys with that email address, (for example if one has expired but you have kept it for decrypting old files) then you should replace the email address with the KEYID of the private key you wish to use.
2. If you know the GPG keyid and there are no duplicate email address issues with other keys, then run 'notes newkey <keyid>'. Notes will replace the keyid automatically in the config file.
.SH COMMANDS
The notes program takes a set of commands which allows the user to manipulate the encrypted notes in the system. 
.TP
\fBinit\fP     
Initialize notes system, assigns first private key and write config file
.TP
\fBconfig\fP     
Display config file
.TP
\fBhelp\fP      
Show help
.TP
\fBversion\fP   
Show version
.TP
\fBshow|ls|list\fP  
List notes in currently used notebook
.TP
\fBnewkey email\fP  
Change GPG key encryption for all notebooks
.TP
\fBfind|search\fP   
[Search is currently not implemented]
.TP
\fBinsert|add\fP    
Add a note
.TP
\fBview|cat\fP      
View a note
.TP
\fBimport\fP        
Import a text file as a note
.TP
\fBrename|mv\fP     
Rename a note
.TP
\fBcopy|cp\fP       
Copy a note
.TP
\fBdelete|rm\fP     
Delete a note
.TP
\fBedit|ed\fP       
Decrypt, edit and then re-encrypt a note file








.SH OPTIONS       
Most commands take either a <note title>, filename or a GPG key ID. See the individual COMMANDS for details on which options each command takes. 
The notes and notebook commands strip spaces from note filenames and notebook directory names. It replaces them with underscores. This behaviour occurs even if the user encloses the filename with spaces in quotes because there are other issues that occur when handling notes with spaces in - particularly when replacing the encryption key.
.SH EXIT STATUS      
Upon an error notes returns a non zero value upon aborting.
.SH ENVIRONMENT
$EDITOR     Notes uses the shell variable to determine which editor the user prefers. If unset it will default to 'vi'

By default notes creates it's notes directory in ~/.notes for the user. This can be changed by midifying the shell script. 
.SH FILES
The following files are found in the notes directory (~/.notes by default):

config      The configuration file for notes. Currently the only option is for specifying the key to be used for encryption (KEY <email address>)
DEFAULT     This link points to the default notebook (notes). This can be reassigned by using the command 'notebook default <notebook name>'
USE         This link points to the currently used notebook. It can be changed by issuing the command 'notebook use <notebook name>'. You can also set this to the default notebook by omitting the notebook name parameter.
.SH VERSIONS     
The script is POSIX compliant and should be available to be installed on any Unix-like platform.

.SH CONFORMING TO
The script is written to use the Bourne Shell and avoid all Bash-isms (which would have made the coding a little easier in some cases. Although Bash is installed by default on most Linuxes, it is not installed by default on a number of other Unix-like operating systems including FreeBSD.

This is deliberate as all Unix and Linux systems should have a POSIX compliant shell (or at least be backwards compatible to one). Hence the application was written for the lowest common denominator.
.SH NOTES
There is currently no sync built into this application. However, the user can simply run a rsync or scp in order to synchronize between two machines running Notes.
.SH BUGS
See https://github.com/Standard-Unix-Notes/unix-notes/issues for details on any Bugs and Issues with the project.

Please report any bugs on the GitHub page.
.SH EXAMPLES

Show help

$ notes 

Initialises notes directory (~/.notes):

$ notes init

Adds a note called 'mynote' in the current notebook encrypting it with your GPG key:

$ notes add mynote

Add note called another_note in the current notebook encrypting it with your GPG key:

$ notes add another note

Rename 'mynote' to 'installation_instructions':
(Notes will replace space in filename with underscore)

$ notes rename mynote
Please enter new name for note: installation instructions
/home/ian/.notes/USE/mynote.gpg exists .... moving

List notes in current notebooks: 

$ notes list
another_note.gpg		installation_instructions.gpg
demo.gpg

Import a text file into Notes:
$ notes import ~/Projects/evil_master_plan

Edit a note (.gpg extension not necessary) in your current editor ($EDITOR):
$ notes edit evil_master_plan

Delete Note:
$ notes rm another_note.gpg

View note:
$ notes view evil_master_plan
gpg: encrypted with 2048-bit RSA key, ID 8E34F9151120CF01, created 2020-11-27
      "bondVillan64@gmail.com <bondVillan64@gmail.com>"
EVIL MASTER PLAN

1. Take over world
2. Stroke white cat

.SH SEE ALSO
notebook    The companion command for managing notebooks for notes. See notebook(1) for details.
.SH PROJECT PAGE
https://github.com/Standard-Unix-Notes/unix-notes
.SH AUTHOR
Ian Stanley (https://github.com/iandstanley)
Contact can be made via project GitHub page
