Notes should be easy to use and secure. We can manually encrypt a 
notefile quite easily with GnuPG and that is fine for a few files. But 
eventually we all collect many note files. Some notes are related to 
others and we decide to reorganize them by placing them in directories. 
To keep things simple we have a relatively flat heirachy of directories 
with the main notes directory (~/.notes) only having a single layer of 
directories beneath it, each corresponding to a notebook (You wouldn't 
have a notebook inside a notebook would you?).

Then we decide we need to keep them secure, particularly if we use 
network backups. So wee look into encryption and find many options with 
some being more secure than others. We probably choose the popular GnuPG 
to encrypt the files as there are many sources for help and 
documentation. Our encrypted notes build and we seem to have a lot. 

Then we find out that our GPG private key is nearly expired. Remind me 
why didn't I use the .gpg endign on my encrypted files? How many 
encrypted files do I need to decrypt and then encrypt again with my new 
key?

This is the scenario for which I wrote Notes. It consists of two 
commands: one to manage notebooks and one to manage notes. 

Notes handles all the encryption relatively transparently to the user. 
It can repace the encryption key easily on all of your encypted notes by 
just entering a one line command. It supports resident GPG keys for 
Yubikeys and PIV cards [We recommend that for resident Yubikeys you 
enable pin support and disable touch for the encryption key as the 
button touch cannot be temporarily cached unlike the pin #. This will 
save you having to touch the Yubikey for each enryption].

Keeping your notes inside Notes shouldn't be restrictive or 
obscure/proprietary. Each note is simply a text file created with your 
default text editor and then encrypted with GPG. This means that you can 
use standad Unix shell commands to manage these notes if you need to for 
file management, backups and even decryption. But to make it easier we 
provide two commands. The 'notes' command handles everything to do with 
notes and the 'notebook' command everything to do with notebooks. 

Notes handles any unsecure files by shredding the file before deletion 
ensuring that the unencrypted file is not accessible. You can even view 
the note without creating an unencrypted version.

The two commands are but a single small shell script that identifies 
what you are trying to do by which command you call it by.

With version 1.0 we have yet to implement git functionality. But for now 
you could just run git inside the ~/.notes directory for managing via 
git. We hope to add more functionality in future releases and welcome 
contributions.

